name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  release:
    types:
      - created
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GODOT_VERSION: 3.4.4
jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - profile: Windows Desktop
            flavour: windows
          - profile: Android
            flavour: android
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup Godot
        uses: vitorgus/setup-godot@v1
        with:
          godot-version: ${{ env.GODOT_VERSION }}
      - name: Setup Java
        if: ${{ matrix.profile == 'Android' }}
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: zulu
      - name: Install android sdk
        if: ${{ matrix.profile == 'Android' }}
        run: |
          curl -Ls https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip -o commandlinetools.zip
          unzip commandlinetools.zip
          cmdline-tools/bin/sdkmanager --sdk_root='/usr/local/lib/android/sdk' 'platform-tools' 'build-tools;30.0.3' 'platforms;android-29' 'cmdline-tools;latest' 'cmake;3.10.2.4988404' 'ndk;21.4.7075529'
      - name: Setup Android Keystore
        if: ${{ matrix.profile == 'Android' }}
        # Setup debug keystore for now
        run: |
          keytool -keyalg RSA -genkeypair -alias androiddebugkey -keypass android -keystore debug.keystore -storepass android -dname "CN=Android Debug,O=Android,C=US" -validity 9999 -deststoretype pkcs12
      - name: Setup Android SDK Path
        if: ${{ matrix.profile == 'Android' }}
        run: |
          mkdir -p ~/.config/godot
          touch ~/.config/godot/editor_settings-3.tres
          tee ~/.config/godot/editor_settings-3.tres << EOF
            [gd_resource type="EditorSettings" format=2]

            [resource]
            interface/editor/display_scale = 3
            interface/editor/code_font_size = 16.8
            text_editor/highlighting/symbol_color = Color( 0.67, 0.785, 1, 1 )
            text_editor/highlighting/keyword_color = Color( 1, 0.44, 0.52, 1 )
            text_editor/highlighting/control_flow_keyword_color = Color( 1, 0.55, 0.8, 1 )
            text_editor/highlighting/base_type_color = Color( 0.26, 1, 0.76, 1 )
            text_editor/highlighting/engine_type_color = Color( 0.556, 1, 0.856, 1 )
            text_editor/highlighting/user_type_color = Color( 0.778, 1, 0.928, 1 )
            text_editor/highlighting/comment_color = Color( 0.8, 0.8075, 0.8275, 0.5 )
            text_editor/highlighting/string_color = Color( 1, 0.925, 0.63, 1 )
            text_editor/highlighting/background_color = Color( 0.125, 0.14375, 0.19375, 1 )
            text_editor/highlighting/completion_background_color = Color( 0.2, 0.23, 0.31, 1 )
            text_editor/highlighting/completion_selected_color = Color( 1, 1, 1, 0.07 )
            text_editor/highlighting/completion_existing_color = Color( 1, 1, 1, 0.14 )
            text_editor/highlighting/completion_scroll_color = Color( 1, 1, 1, 0.07 )
            text_editor/highlighting/completion_font_color = Color( 0.8, 0.8075, 0.8275, 1 )
            text_editor/highlighting/text_color = Color( 0.8, 0.8075, 0.8275, 1 )
            text_editor/highlighting/line_number_color = Color( 0.8, 0.8075, 0.8275, 0.5 )
            text_editor/highlighting/safe_line_number_color = Color( 0.8, 0.969, 0.8275, 0.75 )
            text_editor/highlighting/caret_color = Color( 1, 1, 1, 1 )
            text_editor/highlighting/text_selected_color = Color( 0.1, 0.115, 0.155, 1 )
            text_editor/highlighting/brace_mismatch_color = Color( 1, 0.47, 0.42, 1 )
            text_editor/highlighting/current_line_color = Color( 1, 1, 1, 0.07 )
            text_editor/highlighting/line_length_guideline_color = Color( 0.2, 0.23, 0.31, 1 )
            text_editor/highlighting/word_highlighted_color = Color( 1, 1, 1, 0.07 )
            text_editor/highlighting/number_color = Color( 0.63, 1, 0.88, 1 )
            text_editor/highlighting/function_color = Color( 0.34, 0.7, 1, 1 )
            text_editor/highlighting/member_variable_color = Color( 0.736, 0.88, 1, 1 )
            text_editor/highlighting/mark_color = Color( 1, 0.47, 0.42, 0.3 )
            text_editor/highlighting/breakpoint_color = Color( 1, 0.47, 0.42, 1 )
            text_editor/highlighting/code_folding_color = Color( 1, 1, 1, 0.7 )
            text_editor/highlighting/search_result_color = Color( 1, 1, 1, 0.07 )
            text_editor/completion/idle_parse_delay = 0.3
            asset_library/available_urls = {
            "godotengine.org (Official)": "https://godotengine.org/asset-library/api"
            }
            asset_library/use_threads = true
            export/android/android_sdk_path = "/usr/local/lib/android/sdk"
            export/android/debug_keystore = "debug.keystore"
            export/android/debug_keystore_user = "androiddebugkey"
            export/android/debug_keystore_pass = "android"
            export/android/force_system_user = false
            export/android/shutdown_adb_on_exit = true
            export/web/http_host = "localhost"
            export/web/http_port = 8060
            export/web/use_ssl = false
            export/web/ssl_key = ""
            export/web/ssl_certificate = ""
            export/uwp/signtool = ""
            export/uwp/debug_certificate = ""
            export/uwp/debug_password = ""
            export/uwp/debug_algorithm = 2
            export/windows/rcedit = ""
            export/windows/signtool = ""
            interface/scene_tabs/always_show_close_button = false
            interface/editor/save_on_focus_loss = false
            interface/editor/show_update_spinner = false
            interface/editor/update_continuously = false
            interface/scene_tabs/restore_scenes_on_load = false
            interface/inspector/capitalize_properties = true
            interface/inspector/default_float_step = 0.001
            interface/inspector/disable_folding = false
            interface/inspector/auto_unfold_foreign_scenes = true
            interface/inspector/horizontal_vector2_editing = false
            interface/inspector/horizontal_vector_types_editing = true
            interface/inspector/open_resources_in_current_inspector = true
            interface/inspector/resources_to_open_in_new_inspector = "Script,MeshLibrary,TileSet"
            interface/inspector/default_color_picker_mode = 0
            _default_feature_profile = ""
            interface/editors/show_scene_tree_root_selection = true
            interface/editors/derive_script_globals_by_name = true
            _use_favorites_root_selection = false
            filesystem/file_server/port = 6010
            filesystem/file_server/password = ""
            editors/3d/manipulator_gizmo_size = 80
            editors/3d/manipulator_gizmo_opacity = 0.9
            editors/3d/navigation/show_viewport_rotation_gizmo = true
            debugger/auto_switch_to_remote_scene_tree = true
            debugger/remote_scene_tree_refresh_interval = 1.0
            debugger/remote_inspect_refresh_interval = 0.2
            debugger/profiler_frame_history_size = 600
            debugger/profiler_frame_max_functions = 512
            text_editor/files/auto_reload_scripts_on_external_change = true
            text_editor/files/auto_reload_and_parse_scripts_on_save = true
            text_editor/files/open_dominant_script_on_scene_change = true
            text_editor/external/use_external_editor = false
            text_editor/external/exec_path = ""
            text_editor/script_list/script_temperature_enabled = true
            text_editor/script_list/highlight_current_script = true
            text_editor/script_list/script_temperature_history_size = 15
            text_editor/script_list/current_script_background_color = Color( 1, 1, 1, 0.3 )
            text_editor/script_list/group_help_pages = true
            text_editor/script_list/sort_scripts_by = 0
            text_editor/script_list/list_script_names_as = 0
            text_editor/external/exec_flags = "{file}"
            editors/grid_map/preview_size = 64
            editors/tile_map/preview_size = 64
            editors/tile_map/palette_item_hseparation = 8
            editors/tile_map/show_tile_names = true
            editors/tile_map/show_tile_ids = false
            editors/tile_map/sort_tiles_by_name = true
            editors/tile_map/bucket_fill_preview = true
            editors/tile_map/editor_side = 1
            editors/tile_map/palette_min_width = 80
            editors/3d_gizmos/gizmo_colors/room_edge = Color( 0.5, 1, 0, 1 )
            editors/3d_gizmos/gizmo_colors/room_overlap = Color( 1, 0, 0, 1 )
            editors/3d_gizmos/gizmo_colors/instanced = Color( 0.7, 0.7, 0.7, 0.6 )
            editors/3d_gizmos/gizmo_colors/portal_margin = Color( 1, 0.1, 0.1, 0.3 )
            editors/3d_gizmos/gizmo_colors/portal_edge = Color( 0, 0, 0, 0.3 )
            editors/3d_gizmos/gizmo_colors/portal_arrow = Color( 1, 1, 1, 1 )
            editors/3d_gizmos/gizmo_colors/occluder = Color( 1, 0, 1, 1 )
            editors/3d_gizmos/gizmo_colors/path = Color( 0.5, 0.5, 1, 0.8 )
            editors/3d_gizmos/gizmo_colors/csg = Color( 0, 0.4, 1, 0.15 )
            editors/grid_map/editor_side = 1
            editors/grid_map/palette_min_width = 230
            network/language_server/remote_host = "127.0.0.1"
            network/language_server/remote_port = 6008
            network/language_server/enable_smart_resolve = true
            network/language_server/show_native_symbols_in_editor = false
            network/language_server/use_thread = false
            editors/3d_gizmos/gizmo_colors/camera = Color( 0.8, 0.4, 0.8, 1 )
            editors/3d_gizmos/gizmo_colors/stream_player_3d = Color( 0.4, 0.8, 1, 1 )
            editors/3d_gizmos/gizmo_colors/shape = Color( 0.5, 0.7, 1, 1 )
            editors/3d_gizmos/gizmo_colors/skeleton = Color( 1, 0.8, 0.4, 1 )
            editors/3d_gizmos/gizmo_colors/visibility_notifier = Color( 0.8, 0.5, 0.7, 1 )
            editors/3d_gizmos/gizmo_colors/particles = Color( 0.8, 0.7, 0.4, 1 )
            editors/3d_gizmos/gizmo_colors/reflection_probe = Color( 0.6, 1, 0.5, 1 )
            editors/3d_gizmos/gizmo_colors/gi_probe = Color( 0.5, 1, 0.6, 1 )
            editors/3d_gizmos/gizmo_colors/baked_indirect_light = Color( 0.5, 0.6, 1, 1 )
            editors/3d_gizmos/gizmo_colors/navigation_edge = Color( 0.5, 1, 1, 1 )
            editors/3d_gizmos/gizmo_colors/navigation_edge_disabled = Color( 0.7, 0.7, 0.7, 1 )
            editors/3d_gizmos/gizmo_colors/navigation_solid = Color( 0.5, 1, 1, 0.4 )
            editors/3d_gizmos/gizmo_colors/navigation_solid_disabled = Color( 0.7, 0.7, 0.7, 0.4 )
            editors/3d_gizmos/gizmo_colors/joint = Color( 0.5, 0.8, 1, 1 )
            editors/3d_gizmos/gizmo_colors/joint_body_a = Color( 0.6, 0.8, 1, 1 )
            editors/3d_gizmos/gizmo_colors/joint_body_b = Color( 0.6, 0.9, 1, 1 )
            text_editor/highlighting/gdscript/function_definition_color = Color( 0.4, 0.9, 1, 1 )
            text_editor/highlighting/gdscript/node_path_color = Color( 0.39, 0.76, 0.35, 1 )
            text_editor/help/sort_functions_alphabetically = true
            EOF
      - name: Export Project
        run: |
          godot --path ${{ github.workspace }} --export '${{ matrix.profile }}'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "vigilante-octo-doodle-${{ matrix.flavour}}"
          path: vigilante-octo-doodle*
  calculate-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.git-version.outputs.semVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: git-version
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml
      - name: Label PR Semantic Minor
        if: ${{ github.event_name == 'pull_request' && steps.git-version.outputs.minor > 0 && steps.git-version.outputs.patch == 0 }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Semver-Minor']
            })
      - name: Label PR Semantic Major
        if: ${{ github.event_name == 'pull_request' && steps.git-version.outputs.major > 0 && steps.git-version.outputs.minor == 0 && steps.git-version.outputs.patch == 0 }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Semver-Major']
            })
  release:
    if: github.ref == 'refs/heads/main'
    needs:
      - build-and-test
      - calculate-version
    outputs:
      url: ${{ steps.release.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        id: download
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.calculate-version.outputs.version }}
          name: Release ${{ needs.calculate-version.outputs.version }}
          generate_release_notes: true
          files: |
            ${{ steps.download.outputs.download-path }}/**
  notify:
    if: github.ref == 'refs/heads/main'
    needs:
      - calculate-version
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: |
            ${{ github.repository }} ${{ needs.calculate-version.outputs.version }} has been released.
            Download now at: ${{ needs.release.outputs.url }}
